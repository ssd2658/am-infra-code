name: GCP Terraform Deployment

on:
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
      region:
        required: true
        type: string
      cluster_name:
        required: true
        type: string
      database_name:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      DB_ADMIN_PASSWORD:
        required: true
      SLACK_WEBHOOK:
        required: false

jobs:
  terraform-gcp:
    name: Terraform GCP Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Upload tfvars
        run: echo "project_id=${{ inputs.project_id }}" > terraform.tfvars
        run: echo "region=${{ inputs.region }}" >> terraform.tfvars
        run: echo "cluster_name=${{ inputs.cluster_name }}" >> terraform.tfvars
        run: echo "database_name=${{ inputs.database_name }}" >> terraform.tfvars
        run: echo "environment=${{ inputs.environment }}" >> terraform.tfvars
        uses: actions/upload-artifact@v3
        with:
          name: terraform-vars
          path: terraform.tfvars
      
      
      - name: Download tfvars
        uses: actions/download-artifact@v4
        with:
          name: terraform-vars
          path: .
      
      - name: Verify tfvars
        run: |
          ls -l terraform.tfvars
          cat terraform.tfvars
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ inputs.project_id }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
      
      - name: Terraform Init
        run: terraform init -input=false
      
      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Plan
        run: terraform plan -input=false -var-file=terraform.tfvars
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var-file=terraform.tfvars
