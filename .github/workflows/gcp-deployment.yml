name: GCP Terraform Deployment

on:
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
      region:
        required: true
        type: string
      cluster_name:
        required: true
        type: string
      database_name:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      DB_ADMIN_PASSWORD:
        required: true
      SLACK_WEBHOOK:
        required: false

permissions:
  id-token: write  # Required for OIDC token generation
  contents: read   # Required for checking out code

jobs:
  terraform-gcp:
    name: Terraform GCP Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload tfvars
        run: | 
          echo "project_id=${{ inputs.project_id }}" > terraform.tfvars
          echo "region=${{ inputs.region }}" >> terraform.tfvars
          echo "cluster_name=${{ inputs.cluster_name }}" >> terraform.tfvars
          echo "database_name=${{ inputs.database_name }}" >> terraform.tfvars
          echo "environment=${{ inputs.environment }}" >> terraform.tfvars
      - name: Upload tfvars artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-vars
          path: terraform.tfvars
      
      
      - name: Download tfvars
        uses: actions/download-artifact@v4
        with:
          name: terraform-vars
          path: .
      
      - name: Verify tfvars
        run: |
          ls -l terraform.tfvars
          cat terraform.tfvars
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Debug OIDC Token
        run: |
          echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
          echo "ACTIONS_ID_TOKEN_REQUEST_URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
        
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ inputs.project_id }}
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_POOL_ID }}/providers/github-provider
          service_account: github-actions-sa@supple-student-446218-f7.iam.gserviceaccount.com
          subject: ${{ secrets.GCP_SUBJECT }}
      
      - name: Terraform Init
        run: terraform init -input=false
      
      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Plan
        run: terraform plan -input=false -var-file=terraform.tfvars
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var-file=terraform.tfvars
